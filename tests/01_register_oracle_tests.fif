#!/usr/bin/env fift -s
"TonUtil.fif" include
"Asm.fif" include

"tests/register-utils.fif" include

"build/register-oracle.boc" file>B B>boc int_msg_body ! 

// test # 0 register oracle 

5000 amount !
1 idx !
<b b{00} s, bounce 1 i, b{0100} s, -1 <b idx @ 32 u, b> hashu addr, b{100} s, dest_addr addr, amount @ Gram, 0 9 64 32 + + 1+ u, 
int_msg_body @ <s 2dup s-fits? not rot over 1 i, -rot { drop int_msg_body @ ref, } { s, } cond b>  int_message !

amount @ int_message @ int_msg_body @ <s recv_internal register-code initial_storage c7 runvmctx
test_code
dup 
updated_storage !
boc>B initial_storage boc>B B= 0= test_state

// test # 1 try to register oracle in second time

amount @ int_message @ int_msg_body @ <s recv_internal register-code updated_storage @ c7 runvmctx
swap 54 test_code_fail
boc>B updated_storage @ boc>B B= test_state

// test # 2 try to register oracle with insufficient amount
300 amount !
amount @ int_message @ int_msg_body @ <s recv_internal register-code initial_storage c7 runvmctx
swap 50 test_code_fail
boc>B initial_storage boc>B B= test_state